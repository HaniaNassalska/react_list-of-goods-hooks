{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","sortedGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAOMC,EApCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAW,YAAOD,GAExB,OAAQL,GACN,KAAKL,EAASY,SACZD,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC3C,MACF,KAAKf,EAASiB,OACZN,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAY5C,OAPIX,GACFI,EAAYQ,UAIdC,QAAQC,IAAIhB,EAAUE,GAEfI,EAacW,CACnBrB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBlB,IAAaL,EAASY,UAAY,YAC/Da,QAAS,kBAAMnB,EAAYN,EAASY,WAHtC,iCAQA,wBACEY,KAAK,SACLD,UAAS,4BAAuBlB,IAAaL,EAASiB,QAAU,YAChEQ,QAAS,kBAAMnB,EAAYN,EAASiB,SAHtC,4BAQA,wBACEO,KAAK,SACLD,UAAS,kBAA2B,IAAfhB,EAAsB,aAAe,YAC1DkB,QAAS,kBAAMjB,GAAeD,IAHhC,sBAQEF,GAAYE,IACZ,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QAzCe,WACvBjB,GAAc,GACdF,EAAYN,EAASI,OAoCf,sBAUJ,6BACGK,EAAaiB,KAAI,SAAAC,GAChB,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.397cb236.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const sortedGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      sortedGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      sortedGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleResetClick = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button ${isReversed === true ? 'is-warning' : 'is-light'}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => {\n          return (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}